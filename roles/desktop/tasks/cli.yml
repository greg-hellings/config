- name: install CLI repositories
  become: true
  yum_repository:
    description: A repository
    name: "{{ item.name }}"
    baseurl: "{{ item.url | default(omit) }}"
    mirrorlist: "{{ item.mirrors | default(omit) }}"
    enabled: true
    gpgcheck: "{{ item.gpgcheck | default(false) }}"
    gpgkey: "{{ item.gpgkey | default(omit) }}"
    skip_if_unavailable: "{{ item.skip | default(true) }}"
  with_items: "{{ cli_repositories }}"

- name: install CLI packages
  become: true
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-{{ ansible_lsb['major_release'] }}.noarch.rpm
    - https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-{{ ansible_lsb['major_release'] }}.noarch.rpm
    - HandBrake-cli
    - libaacs
    - git-review
    - jq
    - python3-flake8
    - gnupg2
    - origin-clients
    - source-to-image
    - python-virtualenv
    - entr

- name: create blu-ray config directories
  file:
    dest: "{{ ansible_user_dir }}/.config/{{ item }}"
    state: directory
    mode: 0755
  with_items:
      - aacs

        #- name: downloading aacs files
        #get_url:
        #url: http://www.labdv.com/aacs/KEYDB.cfg
        #dest: "{{ ansible_user_dir }}/.config/aacs"
    #force: true

- name: download bdplus archive
  get_url:
    url: http://www.labdv.com/aacs/libbdplus/bdplus-vm0.bz2
    dest: "{{ ansible_user_dir }}/.config/"
    force: true

- name: extract archive
  shell: tar xaf bdplus-vm0.bz2
  args:
    creates: "{{ ansible_user_dir }}/.config/bdplus"
    chdir: "{{ ansible_user_dir }}/.config"

- name: set ownership on files
  file:
    dest: "{{ item }}"
    recurse: true
  with_items:
    - "{{ ansible_user_dir }}/.config/bdplus"
    - "{{ ansible_user_dir }}/.config/aacs"

- name: create python virtualenv packages
  pip:
    virtualenv: "{{ ansible_user_dir }}/venv/{{ item.name }}"
    state: present
    name: "{{ item.packages }}"
  with_items:
    - name: dev
      packages:
        - cookiecutter
        - tox
        - sphinx
    - name: ansible
      packages:
        - ansible
    - name: tools
      packages:
        - twine
        - wheel
        - ipython
        - Pygments
        - cookiecutter

- name: install Kerberos
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - krb5-libs
    - krb5-workstation
  when: kerberos is defined
  become: true

- name: configure Kerberos
  template:
    src: krb5.conf
    dest: /etc/krb5.conf
    owner: root
    mode: 0644
  when: kerberos is defined
  become: true
